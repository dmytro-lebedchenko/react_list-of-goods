{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","selected","minLength","getStarted","setState","sortByAlphabet","ALPHABET","sortByLength","LENGTH","getReversed","groupByLength","e","target","value","resetToDefault","this","goodsList","goods","visibleGoods","filter","good","length","sort","good1","good2","localeCompare","reverse","getReorderedGoods","className","type","onClick","name","onChange","map","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+EAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAyCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,KACnBC,SAAU,GALd,EAQEC,UAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAR1C,EAUEC,WAAa,WACX,EAAKC,SAAS,CACZP,WAAW,KAZjB,EAgBEQ,eAAiB,WACf,EAAKD,SAAS,CACZL,SAAUN,EAASa,YAlBzB,EAsBEC,aAAe,WACb,EAAKH,SAAS,CACZL,SAAUN,EAASe,UAxBzB,EA4BEC,YAAc,WACZ,EAAKL,UAAS,SAAAR,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBA9BzB,EAkCEY,cAAgB,SAACC,GAAD,OACd,EAAKP,SAAS,CACZH,UAAWU,EAAEC,OAAOC,SApC1B,EAwCEC,eAAiB,WACf,EAAKV,SAAS,CACZN,YAAY,EACZC,SAAUN,EAASO,KACnBC,SAAU,KA5ChB,4CAgDE,WACE,MAKIc,KAAKnB,MAJPC,EADF,EACEA,UACAC,EAFF,EAEEA,WACAC,EAHF,EAGEA,SACAE,EAJF,EAIEA,SAGIe,EA3FV,SACEC,EACAlB,EACAD,EACAG,GAEA,IAAMiB,EAAe,YAAID,GAAOE,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUpB,KAmB9D,OAjBAiB,EAAaI,MAAK,SAACC,EAAOC,GACxB,OAAQzB,GACN,KAAKN,EAASa,SACZ,OAAOiB,EAAME,cAAcD,GAE7B,KAAK/B,EAASe,OACZ,OAAOe,EAAMF,OAASG,EAAMH,OAE9B,QACE,OAAO,MAITvB,GACFoB,EAAaQ,UAGRR,EAkEaS,CAChBjC,EAAiBK,EAAUD,EAAYG,GAGzC,OACE,sBAAK2B,UAAU,MAAf,WACI/B,GACA,wBACE+B,UAAU,uCAIVC,KAAK,SACLC,QAASf,KAAKZ,WANhB,mBAYDN,GACC,sBAAK+B,UAAU,iBAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,wBACEA,UAAU,kCAIVC,KAAK,SACLC,QAASf,KAAKV,eANhB,iCAWA,wBACEuB,UAAU,qCAIVC,KAAK,SACLC,QAASf,KAAKR,aANhB,4BAWA,wBACEqB,UAAU,qCAIVC,KAAK,SACLC,QAASf,KAAKN,YANhB,qBAWA,wBACEmB,UAAU,oCAIVC,KAAK,SACLC,QAASf,KAAKD,eANhB,mBAWA,qBAAKc,UAAU,kCAAf,SAKE,wBACEG,KAAK,YACLH,UAAU,iBACVf,MAAOZ,EACP+B,SAAUjB,KAAKL,cAJjB,SAMGK,KAAKb,UAAU+B,KAAI,SAAAZ,GAAM,OACxB,wBAEER,MAAOQ,EAFT,SAIGA,GAHIA,aAUf,oBAAIO,UAAU,sBAAd,SACGZ,EAAUiB,KAAI,SAACb,GAAD,OACb,oBACEQ,UAAU,mBADZ,SAIGR,GAFIA,kBArJvB,GAAyBc,aCvDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.23795b22.chunk.js","sourcesContent":["import { Component, ChangeEvent } from 'react';\nimport 'bulma/css/bulma.min.css';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n  selected: number,\n) {\n  const visibleGoods = [...goods].filter(good => good.length <= selected);\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n  selected: number,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n    selected: 1,\n  };\n\n  minLength = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n  getStarted = () => {\n    this.setState({\n      isStarted: true,\n    });\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  getReversed = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  groupByLength = (e: ChangeEvent<HTMLSelectElement>) => (\n    this.setState({\n      selected: +e.target.value,\n    })\n  );\n\n  resetToDefault = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n      selected: 1,\n    });\n  };\n\n  render() {\n    const {\n      isStarted,\n      isReversed,\n      sortType,\n      selected,\n    } = this.state;\n\n    const goodsList = getReorderedGoods(\n      goodsFromServer, sortType, isReversed, selected,\n    );\n\n    return (\n      <div className=\"App\">\n        {!isStarted && (\n          <button\n            className=\"\n              App__start-button\n              button\n              is-primary\"\n            type=\"button\"\n            onClick={this.getStarted}\n          >\n            Start\n          </button>\n        )}\n\n        {isStarted && (\n          <div className=\"App__list list\">\n            <div className=\"list__options options\">\n              <button\n                className=\"\n                  options__button\n                  button\n                  is-info\"\n                type=\"button\"\n                onClick={this.sortByAlphabet}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                className=\"\n                  options__button\n                  button\n                  is-success\"\n                type=\"button\"\n                onClick={this.sortByLength}\n              >\n                Sort by length\n              </button>\n\n              <button\n                className=\"\n                  options__button\n                  button\n                  is-warning\"\n                type=\"button\"\n                onClick={this.getReversed}\n              >\n                Reverse\n              </button>\n\n              <button\n                className=\"\n                  options__button\n                  button\n                  is-danger\"\n                type=\"button\"\n                onClick={this.resetToDefault}\n              >\n                Reset\n              </button>\n\n              <div className=\"\n                options__select\n                select\n                is-link\"\n              >\n                <select\n                  name=\"minLength\"\n                  className=\"select is-link\"\n                  value={selected}\n                  onChange={this.groupByLength}\n                >\n                  {this.minLength.map(length => (\n                    <option\n                      key={length}\n                      value={length}\n                    >\n                      {length}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            <ul className=\"list__goods content\">\n              {goodsList.map((good) => (\n                <li\n                  className=\"list__goods-item\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}